@model ARID.Models.JournalPage
@{
    ViewData["Title"] = "Edit";
}
<h2>Edit</h2>
<h4>JournalPage</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="JournalId" class="control-label"></label>
                <select asp-for="JournalId" class="form-control" asp-items="ViewBag.JournalId"></select>
                <span asp-validation-for="JournalId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Body" class="control-label"></label>
                @Html.TextAreaFor(model => model.Body, new { rows = 10, cols = 50, @class = "form-control", @maxlength = "5000" })
                <span asp-validation-for="Body" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="Direction" /> @Html.DisplayNameFor(model => model.Direction)
                    </label>
                </div>
            </div>*@
            <div class="form-group">
                <label asp-for="Releasedate" class="control-label"></label>
                <input asp-for="Releasedate" class="form-control" />
                <span asp-validation-for="Releasedate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',



            directionality: 'rtl',
            //language: 'ar_SA',
            plugins: "link,image,media,table,textcolor colorpicker",

            //menubar: "insert",
            toolbar: "link,image,media,table,forecolor backcolor",
            color_picker_callback: function (callback, value) {
                callback('#FF00FF');
            },
            relative_urls: false,
            remove_script_host: false,
            convert_urls: true,

            mode: "textareas",

            //plugins: "table,contextmenu,paste,-externalplugin"

        });</script>
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}