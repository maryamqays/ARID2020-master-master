@model ARID.Models.ProfileViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using System.Globalization
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    //ViewData["Title"] = @Localizer["Title"];
    ViewData["Title"] = "الصفحة الشخصية";
}


<h2>
    <a href="@Url.Action("Register", "Account", new { id=Model.ApplicationUser.Id },this.Context.Request.Scheme)" align="left" class="btn btn-success" target="_blank">
        سجل مجانا في منصة اريد
    </a>
</h2>
<input id="test" type="hidden" value="@ViewData["true"]" />
<br />
<br />
<div>
    <div class="row">
        <div class="col-md-3">
            @if (Model.ApplicationUser.ProfileImage != null)
            {
                <img id="img1" class="img-rounded"
                     src="@Url.Content("~/" + ARID.Properties.Resources.ProfileImageFolder +
                                       "/" + Model.ApplicationUser.ProfileImage)" width="200" />
            }
            else
            { <img width="200" id="img1" class="img-rounded" src="~/images/default_small.png" />
            }
        </div>

        <div class="col-md-3">
            @Html.DisplayNameFor(model => model.ApplicationUser.ARID) :
            arid.my/@Common.ARIDFormat(Model.ApplicationUser.ARID)
            <br />
            @Html.DisplayNameFor(model => model.ApplicationUser.ArName) :
            @Html.DisplayFor(model => model.ApplicationUser.ArName)
            <br />
            @Html.DisplayNameFor(model => model.ApplicationUser.EnName) :
            @Html.DisplayFor(model => model.ApplicationUser.EnName)
            <br />
            @if (Model.ApplicationUser.OtherNames != null)
            {
                @Html.DisplayNameFor(model => model.ApplicationUser.OtherNames) <span>:</span>
                @Html.DisplayFor(model => model.ApplicationUser.OtherNames)
            }
            <br />

            @Html.DisplayNameFor(model => model.ApplicationUser.Visitors) :
            @Html.DisplayFor(model => model.ApplicationUser.Visitors)
        </div>

        <div class="col-md-3">
            @Html.DisplayNameFor(model => model.ApplicationUser.CountryId) :

            @if (Model.ApplicationUser.CountryId == 1)
            {
                @Html.DisplayFor(model => model.ApplicationUser.Country.ArCountryName)
            }
            else
            {
                <a asp-action="FilterBy" asp-route-countryId="@Model.ApplicationUser.CountryId">@Model.ApplicationUser.Country.ArCountryName</a>}

            <br />
            @Html.DisplayNameFor(model => model.ApplicationUser.CityId) :
            @Html.DisplayFor(model => model.ApplicationUser.City.ArCityName)
            <br />
            @if (Model.ApplicationUser.UniversityId != 1)
            {
                @Html.DisplayNameFor(model => model.ApplicationUser.UniversityId) <span>:</span>


                <a asp-action="FilterBy" asp-route-universityId="@Model.ApplicationUser.UniversityId">@Model.ApplicationUser.University.ArUniversityName</a>
            }
            <br />
            @if (Model.ApplicationUser.FacultyId != 1)
            {
                @Html.DisplayNameFor(model => model.ApplicationUser.FacultyId) <span>:</span>
                @Html.DisplayFor(model => model.ApplicationUser.Faculty.ArFacultyName)
            }

            <br />
            @if (!string.IsNullOrEmpty(Model.ApplicationUser.FirmName))
            {
                @Html.DisplayNameFor(model => model.ApplicationUser.FirmName) <span>:</span>
                @Html.DisplayFor(model => model.ApplicationUser.FirmName)
            }
        </div>


        <div class="col-md-3">
            @if (!string.IsNullOrEmpty(Model.ApplicationUser.Country.Flag) &&
!string.IsNullOrWhiteSpace(Model.ApplicationUser.Country.Flag))
            {
                <img class="img-rounded"
                     src="@Url.Content("~/" + ARID.Properties.Resources.CountryFlagFolder +
                                                               "/" + Model.ApplicationUser.Country.Flag)" height="75" />
            }
            @if (!string.IsNullOrEmpty(Model.ApplicationUser.University.LogoHD) &&
!string.IsNullOrWhiteSpace(Model.ApplicationUser.University.LogoHD))
            {
                <img class="img-rounded"
                     src="@Url.Content("~/" + ARID.Properties.Resources.UniversityLogoFolder +
                                                         "/" + Model.ApplicationUser.University.LogoHD)" height="75" />
            }
            <hr />
            @foreach (var item in Model.UserBadges.Where(a => a.IsGranted == true))
            {
                <img class="img-rounded"
                     src="@Url.Content("~/" + ARID.Properties.Resources.BadgeLogoFolder +
                                                                "/" + item.Badge.BadgeLogo)" width="75" height="75" />
            }
        </div>



        @*<div class="form-group" style="border:1px solid #808080">
                <table>
                        <tr>
                            <td width="25"></td>
                            <td width="175"></td>
                            <td><lable>@Localizer["ADVText"]</lable></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                <a id="qrCode"
                                   href="@Url.Action("Register", "Account", new { id=Model.ApplicationUser.Id },
                                                                        this.Context.Request.Scheme)" target="_blank"></a>
                            </td>
                            <td>
                                <a href="@Url.Action("Register", "Account", new { id=Model.ApplicationUser.Id },this.Context.Request.Scheme)" target="_blank">
                                    @Url.Action("Register", "Account", new { id = Model.ApplicationUser.Id }, this.Context.Request.Scheme)
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td></td>
                            <td><br /></td>
                        </tr>
                    </table>
            </div>*@
        <div class="form-group">
            <table class="table">
                @if (!string.IsNullOrEmpty(Model.ApplicationUser.CVURL)
&& !string.IsNullOrWhiteSpace(Model.ApplicationUser.CVURL))
                {
                    <tr>
                        <th width="200">@Localizer["Download"]</th>
                        <th>
                            <a href="@Url.Content("~/" + @ARID.Properties.Resources.CVFileFolder + "/" + @Model.ApplicationUser.CVURL)" target="_blank">@Model.ApplicationUser.EnName</a>
                        </th>
                    </tr>
                }
                @if (!string.IsNullOrEmpty(Model.ApplicationUser.ContactMeDetail)
&& !string.IsNullOrWhiteSpace(Model.ApplicationUser.ContactMeDetail))
                {
                    <tr>
                        <th width="200">@Html.DisplayNameFor(model => model.ApplicationUser.ContactMeDetail) </th>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <th>@Html.Raw(Model.ApplicationUser.ContactMeDetail)</th>
                        }
                        else
                        {
                            <th>تفاصيل الاتصال متاحة فقط لاعضاء المنصة</th>}
                    </tr>
                }
                @if (!string.IsNullOrEmpty(Model.ApplicationUser.Summary)
&& !string.IsNullOrWhiteSpace(Model.ApplicationUser.Summary))
                {
                    <tr>
                        <th width="200">@Html.DisplayNameFor(model => model.ApplicationUser.Summary) </th>
                        <th>@Html.DisplayFor(model => model.ApplicationUser.Summary)</th>
                    </tr>
                }
                <tr>
                    <th>
                        @{
                            ApplicationUser currentUser = null;
                            if (SignInManager.IsSignedIn(User))
                            {
                                currentUser = await UserManager.GetUserAsync(User);
                                if (Model.ApplicationUser.Id != currentUser.Id)
                                {
                                    if (Model.Followers.Where(f => f.FollowedUserId == Model.ApplicationUser.Id && f.UserId == currentUser.Id).Count() > 0)
                                    {
                                        <a id="followbtn" class="btn btn-default" style="color:black;font-weight:800">@Localizer["Unfollow"]</a>
                                    }
                                    else
                                    {
                                        <a id="followbtn" class="btn btn-success" style="color:black;font-weight:800">@Localizer["Follow"]</a>
                                    }
                                }
                            }
                        }
                    </th>
                </tr>
            </table>
        </div>
        <hr />
        @if (Model.EducationalLevels.Count > 0)
        {
            <div>
                <h3>  <span class="glyphicon glyphicon-education" aria-hidden="true"></span>  @Localizer["AcademicQualifications"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.EducationalLevels[0].Indx)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.EducationalLevels[0].AcademicDegreeId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EducationalLevels[0].SpecialityId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EducationalLevels[0].ArCertificateName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EducationalLevels[0].EnCertificateName)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.EducationalLevels[0].ArDescription)
                                </th>*@
                            @*<th>
                                    @Html.DisplayNameFor(model => model.EducationalLevels[0].EnDescription)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.EducationalLevels[0].IsCurrent)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EducationalLevels[0].FromYear)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EducationalLevels[0].ToYear)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.EducationalLevels)
                        {
                            <tr>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.Indx)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.AcademicDegree.ArDegreeName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Speciality.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArCertificateName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EnCertificateName)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.ArDescription)
                                    </td>*@
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.EnDescription)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FromYear)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ToYear)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.AcademicPositions.Count > 0)
        {
            <div>
                <h3> <span class="glyphicon glyphicon-user" aria-hidden="true"></span> @Localizer["AcademicPositions"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.AcademicPositions[0].Indx)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].PositionTypeId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].ArDescription)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].EnDescription)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].FacultyId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].UniversityId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].CountryId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].CityId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].IsCurrent)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].FromYear)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicPositions[0].ToYear)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.AcademicPositions)
                        {
                            <tr>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.Indx)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.PositionType.ArPositionName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArDescription)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EnDescription)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Faculty.ArFacultyName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.University.ArUniversityName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Country.ArCountryName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.City.ArCityName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FromYear)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ToYear)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.TeachingExperiences.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>  @Localizer["TeachingExperiences"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.TeachingExperiences[0].Indx)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.TeachingExperiences[0].ArTitle)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.TeachingExperiences[0].EnTitle)
                                </th>*@
                            @*<th>
                                    @Html.DisplayNameFor(model => model.TeachingExperiences[0].ArDescription)
                                </th>*@
                            @*<th>
                                    @Html.DisplayNameFor(model => model.TeachingExperiences[0].EnDescription)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.TeachingExperiences[0].IsCurrent)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TeachingExperiences[0].FromYear)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TeachingExperiences[0].ToYear)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TeachingExperiences)
                        {
                            <tr>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.Indx)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArTitle)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.EnTitle)
                                    </td>*@
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.ArDescription)
                                    </td>*@
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.EnDescription)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FromYear)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ToYear)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.Publications.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-book" aria-hidden="true"></span> @Localizer["Publications"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Publications[0].PublicationType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Publications[0].ArTitle)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Publications[0].ArAuthors)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Publications[0].PublicationDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Publications[0].Publisher)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.Publications[0].DOI)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.Publications[0].FileLink)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Publications)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PublicationType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArTitle)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArAuthors)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PublicationDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Publisher)
                                </td>
                                @*<td>
                                        <a href="@item.DOI" target="_blank">@item.DOI</a>
                                    </td>*@
                                <td>
                                    @if (!string.IsNullOrEmpty(item.FileLink))
                                    {
                                        <a name="@item.Id" class="download" href="@Url.Content("~/" + @ARID.Properties.Resources.PublicationFiles + "/" + @item.FileLink)" target="_blank">@Localizer["Download"]</a>
                                        <p title="مرات التحميل">(@item.DownloadHits)</p>
                                    }
                                    else
                                    {
                                        @if (SignInManager.IsSignedIn(User))
                                        {
                                            @*<input type="button" name="@item.Id" id="request" value="طلب البحث" />*@
                                            
                                            <form id="my_form" asp-action="Details" asp-route-pid="@item.Id" asp-route-id="@Model.ApplicationUser.Id">
                                                <a href="javascript:{}" onclick="document.getElementById('my_form').submit();">طلب البحث</a>
                                            </form>
                                        }
                                        else
                                        {
                                            <a asp-controller="Account" asp-action="Register">طلب البحث</a>
                                            @*<form id="my_form" asp-controller="Account" asp-action="Register">
                                                    <a href="javascript:{}" onclick="document.getElementById('my_form').submit();">طلب البحث</a>
                                                </form>*@
                                        }
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.AcademicActivities.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-globe" aria-hidden="true"></span> @Localizer["AcademicActivities"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicActivities.First().ActivityType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicActivities[0].ArTitle)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicActivities[0].EnTitle)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.AcademicActivities[0].ArDescription)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AcademicActivities[0].EnDescription)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicActivities[0].ActivityDate)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.AcademicActivities[0].ActivityURL)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicActivities[0].RelationType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicActivities[0].Language)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AcademicActivities[0].CountryId)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.AcademicActivities)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ActivityType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArTitle)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EnTitle)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.ArDescription)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EnDescription)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.ActivityDate)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.ActivityURL)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.RelationType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Language)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Country.ArCountryName)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.Projects.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> @Localizer["Projects"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Projects[0].ArProjectName)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.Projects[0].ArDescription)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Projects[0].ArDetails)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.Projects[0].CountryId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Projects[0].FromYear)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Projects[0].ToYear)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Projects)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArProjectName)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.ArDescription)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ArDetails)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.Country.ArCountryName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FromYear)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ToYear)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.postsCount> 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-tags" aria-hidden="true"></span> المدونات</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th width="100%">
                                العنوان
                            </th>
                            <th>
                                التاريخ
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.UserBadges.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-tags" aria-hidden="true"></span> @Localizer["UserBadges"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th width="400">
                                @Html.DisplayNameFor(model => model.UserBadges[0].BadgeId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UserBadges[0].DateofGrant)
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.UserBadges.Where(a => a.IsGranted == true))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Badge.ArBadgeName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateofGrant)
                                </td>
                                <td>
                                    <a target="_blank" asp-controller="Badges" asp-action="Details" asp-route-id="@item.BadgeId">
                                        <img class="img-rounded" src="@Url.Content("~/" + @ARID.Properties.Resources.BadgeLogoFolder + "/" + item.Badge.BadgeLogo)" width="50" height="50" />
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.ProfileLinks.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-link" aria-hidden="true"></span> @Localizer["ProfileLinks"]</h3>
                <table class="table-hover table table-striped table-bordered dt-responsive">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th width="200">
                                @Html.DisplayNameFor(model => model.ProfileLinks[0].ProfileType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ProfileLinks[0].ProfileUrl)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ProfileLinks)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ProfileType)
                                </td>
                                <td>
                                    <a href="@item.ProfileUrl" target="_blank">@item.ProfileUrl</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <hr />
        }
        @if (Model.Followers.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> @Localizer["Followers"] (<a style="color:red"> @Model.Followers.Count()</a>)</h3>
                @foreach (var item in Model.Followers)
                {
                    <a target="_blank" href="@Url.Content("https://arid.my/" + Common.ARIDFormat(item.User.ARID))">
                        <span class="badge badge-secondary">@item.User.ArName</span>
                    </a>
                }
            </div>
            <hr />
        }
        @if (Model.Followings.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> @Localizer["Followings"] (<a style="color:red"> @Model.Followings.Count()</a>)</h3>
                @foreach (var item in Model.Followings)
                {
                    <a target="_blank" href="@Url.Content("https://arid.my/" + Common.ARIDFormat(item.FollowedUser.ARID))">
                        <span class="badge badge-secondary">@item.FollowedUser.ArName</span>
                    </a>
                }
            </div>
            <hr />
        }
        @if (Model.RegisteredByYou > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-menu-hamburger" aria-hidden="true"></span> @Localizer["RegisterdByYou"] (<a style="color:red">@Model.RegisteredByYou</a>)</h3>
            </div>
            <hr />
        }
        @if (Model.UserExpertises.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-stats" aria-hidden="true"></span> @Localizer["UserExpertises"]</h3>
                @foreach (var item in Model.UserExpertises)
                {
                    <span class="badge badge-secondary">@item.Expertise.Name</span>
                }
            </div>
            <hr />
        }
        @if (Model.UserSkills.Count > 0)
        {
            <div>
                <h3><span class="glyphicon glyphicon-saved" aria-hidden="true"></span> @Localizer["UserSkills"]</h3>
                @foreach (var item in Model.UserSkills)
                {
                    <span class="badge badge-secondary">@item.Skill.Name</span>
                }
            </div>
            <hr />
        }
        <br />
        <a href="@Url.Action("Register", "Account", new { id=Model.ApplicationUser.Id },this.Context.Request.Scheme)" align="left" class="btn btn-success" target="_blank">
            سجل مجانا في منصة اريد
        </a>
    </div>
</div>
<div>
    <a asp-action="Search">@Localizer["Backtosearch"]</a>
</div>

<hr />


@section Scripts{
    <script type="text/javascript" src="~/lib/qrcode.js"></script>
    <script type="text/javascript">
        new QRCode(document.getElementById("qrCode"),
            {
                text: "@Url.Action("Register", "Account", new { id=Model.ApplicationUser.Id }, this.Context.Request.Scheme)",
                width: 150,
                height: 150
            });
        @*$("#urlstring").text("@Url.Action("Register", "Account", new { id = Model.ApplicationUser.Id }, this.Context.Request.Scheme)");*@
    </script>
    <script>
        $(document).ready(function () {
            $("#followbtn").click(
                function () {
                    if ($("#followbtn").text() == "@Localizer["Follow"]")
                    {
                        var FollowOptions = {};
                        FollowOptions.url = "/@CultureInfo.CurrentCulture.Name/ApplicationUsers/Follow/";
                        FollowOptions.data = { id: "@Model.ApplicationUser.Id" };
                        FollowOptions.success = function () {
                            $("#followbtn").prop("text", "@Localizer["Unfollow"]");
                        };
                        $.ajax(FollowOptions);
                    }
                    else
                    {
                        var FollowOptions = {};
                        FollowOptions.url = "/@CultureInfo.CurrentCulture.Name/ApplicationUsers/Unfollow/";
                        FollowOptions.data = { id: "@Model.ApplicationUser.Id" };
                        FollowOptions.success = function () {
                            $("#followbtn").prop("text", "@Localizer["Follow"]");
                        };
                        $.ajax(FollowOptions);
                    }
                });
        });
    </script>
    <script>
        $(window).on('load', function () {
            if ($("#test").val() != 0) {
                alert("تم إرسال الطلب بنجاح");
            }
        });

    </script>
    <script>
        $(document).ready(function () {
            $(".download").click(
                function () {
                              var FollowOptions = {};
                            FollowOptions.url = "/@CultureInfo.CurrentCulture.Name/ApplicationUsers/PublicationDownloads/";
                            FollowOptions.data = { id: $(this).attr("name") };
                            FollowOptions.success = function () {
                                alert("ss");
                            };

                   $.ajax(FollowOptions);
                });
        });
    </script>
}
